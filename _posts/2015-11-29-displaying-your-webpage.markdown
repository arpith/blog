---
layout: post
date: 2015-11-29 18:04:37 GMT
tags:
- react
- nodejs
- koa
- koa-static
- universal app
- isomorphic app
- web development
- amazon web services
- s3
- cloudfront
- heroku
- dyno
- reactjs
title: "Displaying your webpage"
---
<p>Today&rsquo;s story is a quick look at what happens when someone visits &nbsp;<a href="http://constellational.com">constellational.com/you</a>.</p><figure class="tmblr-full" data-orig-height="405" data-orig-width="540" data-orig-src="/images/b2b688ce35899cab0688193308d47e2db92d42fbdbf1e78b9551e18b01d630a7.png"><img src="/images/20e1fc526c77ed85ba7335893d010ba96b3b1e4f1790cc72f52a7a8460973cdb.png" data-orig-height="405" data-orig-width="540" data-orig-src="/images/b2b688ce35899cab0688193308d47e2db92d42fbdbf1e78b9551e18b01d630a7.png"></figure><p><br></p><p>The visitor&rsquo;s request first goes to <a href="http://iwantmyname.com/">iwantmyname.com</a>&#8202;&mdash;&#8202;they host my <a href="https://en.wikipedia.org/wiki/Domain_Name_System">DNS records&#8202;</a>&mdash;&#8202;who point them (well, the visitor&rsquo;s browser) to <a href="http://constellational.herokuapp.com/">constellational.herokuapp.com</a> (<a href="http://constellational.com/">constellational</a> is currently running on <a href="http://heroku.com/">Heroku</a>). Heroku passes the request to the <a href="https://devcenter.heroku.com/articles/dynos">dyno</a> that runs this <a href="http://nodejs.org/">nodejs</a> <a href="https://github.com/constellational/web/blob/0558883035d0539113c284c277a5494b772c1bd7/index.js">code</a>&nbsp;(written using <a href="http://koajs.com/">koa</a>).</p><pre>app.use(serve('public'));<br>app.use(function *() {<br> &nbsp;var splitURL = this.url.split('/');<br> &nbsp;splitURL.shift();<br> &nbsp;var username = splitURL.shift().toLowerCase();<br> &nbsp;var id = splitURL.shift();<br> &nbsp;var user = yield fetchUser(username).then((user) =&gt; {<br> &nbsp; &nbsp;if ((id) &amp;&amp; (user.posts.indexOf(id) &gt; 0)) {<br> &nbsp; &nbsp; &nbsp;user.posts.splice(user.posts.indexOf(id), 1);<br> &nbsp; &nbsp; &nbsp;user.posts.unshift(id);<br> &nbsp; &nbsp;}<br> &nbsp; &nbsp;var promiseArr = user.posts.map(id =&gt; fetchPost(username, id));<br> &nbsp; &nbsp;return Promise.all(promiseArr).then((data) =&gt; {<br> &nbsp; &nbsp; &nbsp;user.posts = data; return user;<br> &nbsp; &nbsp;});<br> &nbsp;});<br> &nbsp;this.body = generateHTML(user);<br>});</pre><p><a href="https://github.com/constellational/web/blob/0558883035d0539113c284c277a5494b772c1bd7/index.js">The code</a> first checks that your request can&rsquo;t be <a href="http://arpith.co/post/133345400442/a-double-page-app">served with a static file</a>, before splitting the url to get the username (it also tries to figure out the post id if the visitor wanted to see constellational.com/you/yourpost).</p><pre>function fetchUser(username) {<br> &nbsp;return fetch(USER_URL + '/' + username).then(res =&gt; res.json());<br>}<br>function fetchPost(username, url) {<br> &nbsp;return fetch(POST_URL + '/' + username + '/' + url).then(res =&gt; res.json());<br>}</pre><p>The code then <a href="http://arpith.co/post/133734557012/you-say-username-i-say-username">converts your username to lowercase</a> and fetches a file off of<a href="https://aws.amazon.com/s3/">S3</a> (via <a href="https://aws.amazon.com/cloudfront/">cloudfront</a>) that contains the list of urls to your posts. It can then fetch the individual posts before generating HTML (<a href="http://arpith.co/post/133415247167/isomorphic-react-in-three-simple-steps">using ReactDOMServer.renderToString()</a>) that&rsquo;s (finally!) passed back to the visitor. Er, to their browser, atleast.</p><pre>function generateHTML(user) {<br> &nbsp;var contentType = "&lt;meta http-equiv='Content-Type' content='text/html; charset=utf-8'&gt;";<br> &nbsp;var viewport = "&lt;meta name='viewport' content='width=device-width, initial-scale=1' /&gt;";<br> &nbsp;var stylesheet = "&lt;link rel='stylesheet' type='text/css' href='" + CSS_URL + "'&gt;";<br> &nbsp;var head = contentType + viewport + stylesheet;<br> &nbsp;var reactString = ReactDOMServer.renderToString(React.createElement(views.User, user));<br> &nbsp;var body = "&lt;body&gt;&lt;div id='react-mount'&gt;" + reactString + "&lt;/div&gt;&lt;/body&gt;&lt;script src='" + JS_URL + "'&gt;&lt;/script&gt;&lt;/html&gt;";<br> &nbsp;return "&lt;html&gt;" + head + body + "&lt;/html&gt;";<br>}</pre><p>Phew! That code&rsquo;s a mess, huh? <a href="https://github.com/constellational/web/issues/11">Using a templating system</a> should fix that! I&rsquo;m also putting the site behind <a href="https://www.cloudflare.com/">Cloudflare</a>, should write about that!</p><p>What&rsquo;s <a href="http://constellational.com">Constellational</a>? Glad you asked! It&rsquo;s a home for your notes online, a pleasant way to write and share them. <a href="http://eepurl.com/bHN6Mf">Sign up here</a>!</p>