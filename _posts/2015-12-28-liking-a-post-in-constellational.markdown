---
layout: post
date: 2015-12-28 18:33:34 GMT
tags:
- react native
- writing
- sharing
- likes
- stars
- ios
- apps
- ios app development
- reading
- favorite
- flux
title: "Liking a Post in Constellational"
---
<p>The app <a href="http://github.com/constellational">I’m building</a> to <a href="http://arpith.co/post/134539082857/sharing-a-post">share notes</a>, <a href="http://constellational.com/">Constellational</a>, lets you <a href="http://arpith.co/post/134737535752/keeping-track-of-what-youve-read">keep track</a> of what you’ve <a href="http://arpith.co/post/135331987217/remembering-what-you-read-last">read recently</a>. I’ve now added a way to keep track of your favourite posts by adding a star to them. <a href="https://github.com/constellational/iOS/blob/f266909bb9ce8c9a19fae9bdba1789dffc5961d1/components/Post.js">This is how</a> I did it in <a href="http://facebook.github.io/react-native/">React Native</a>.</p><figure class="tmblr-full" data-orig-height="600" data-orig-width="800"><img src="/images/7a10c464a96c4f99dab702bdf861dd740eaaa93540b67042829e64f863212c2d.jpg" data-orig-height="600" data-orig-width="800"></figure><h2>Adding a Star to a Post</h2><p>So you’ve read a post you liked, and want to add it to your favourites. When you tap ‘Star’ a new post is created containing the username and url of this post:</p><pre>if (selectedOption === 'Star') {<br> &nbsp;let post = {<br> &nbsp; &nbsp;type: 'star',<br> &nbsp; &nbsp;data: {<br> &nbsp; &nbsp; &nbsp;url: this.props.post.url,<br> &nbsp; &nbsp; &nbsp;username: this.props.post.username<br> &nbsp; &nbsp;}<br> &nbsp;};<br> &nbsp;PostActions.create(post);<br>}</pre><p>This makes removing the post from your list of favourites easy, it’s just a delete:</p><pre>if (selectedOption === 'Remove Star') {<br> &nbsp;PostActions.del(this.props.post);<br>}</pre><h2>Displaying a Starred Post</h2><p>When it comes to displaying a post that you’ve added a star to, the post details are first fetched with the username/url that you stored earlier, before rendering as usual:</p><pre>render() {<br> &nbsp;let noteText = '';<br> &nbsp;let post = this.props.post;<br><br> &nbsp;if (post.isDraft) noteText = 'Draft';<br> &nbsp;if (post.hasUnpublishedEdits) noteText = 'Editing';<br> &nbsp;if (post.type === 'star') {<br> &nbsp; &nbsp;noteText = 'Starred';<br> &nbsp; &nbsp;post = PostStore.getPost(post.data.username, post.data.url);<br> &nbsp;}</pre><pre> &nbsp;return (<br> &nbsp; &nbsp;&lt;TouchableOpacity onPress={this.showOptions}&gt;<br> &nbsp; &nbsp; &nbsp;&lt;View style={styles.post}&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;Text style={styles.note}&gt;{noteText}&lt;/Text&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;Text style={styles.text}&gt;{post.data}&lt;/Text&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;Text style={styles.time}&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{moment(post.updated).format('LLLL')}<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;/Text&gt;<br> &nbsp; &nbsp; &nbsp;&lt;/View&gt;<br> &nbsp; &nbsp;&lt;/TouchableOpacity&gt;<br> &nbsp;);<br> &nbsp;}<br>}</pre><h2>Displaying the option to Star / Remove Star</h2><p>For now I’m using an action sheet that opens up when you tap the post to display actions you can take. Depending on whether the post is created by the user (or is someone else’s post that is being viewed) a different set of options are displayed:</p><pre>showOptions() {<br> &nbsp;let params = {};<br> &nbsp;<br> &nbsp;if (this.props.post.username === SettingStore.getUsername()) {<br> &nbsp; &nbsp;params = {<br> &nbsp; &nbsp; &nbsp;options: ['Share', 'Edit', 'Delete', 'Cancel'],<br> &nbsp; &nbsp; &nbsp;destructiveButtonIndex: 2,<br> &nbsp; &nbsp; &nbsp;cancelButtonIndex: 3<br> &nbsp; &nbsp;};<br> &nbsp;} else {<br> &nbsp; &nbsp;let options = ['Star', 'Share', 'Cancel'];<br> &nbsp; &nbsp;if (this.props.post.type === 'star') options[0] = 'Remove Star';<br> &nbsp; &nbsp;params = {<br> &nbsp; &nbsp; &nbsp;options: options,<br> &nbsp; &nbsp; &nbsp;cancelButtonIndex: 2<br> &nbsp; &nbsp;}<br> &nbsp;}</pre><pre> &nbsp;let handleOptions = (buttonIndex) =&gt; { &nbsp; <br> &nbsp; &nbsp;this.handleOptions(params.options[buttonIndex]);<br> &nbsp;};</pre><pre> &nbsp;ActionSheetIOS.showActionSheetWithOptions(params, handleOptions);<br>}</pre><p>That’s about it! This fixes <a href="https://github.com/constellational/iOS/issues/80">#80</a>.</p><p>Still to come: <a href="https://github.com/constellational/iOS/issues/82">displaying the number of times your post has been liked</a>.</p><p>Sounds interesting? <a href="http://eepurl.com/bHN6Mf">Sign up here</a>!</p>