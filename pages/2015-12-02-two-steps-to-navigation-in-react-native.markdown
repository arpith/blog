---
layout: post
date: 2015-12-02 18:36:58 GMT
tags:
- react native
- apps
- ios
- ios app development
- javascript
- flux
- navigation
- components
- constellational
- code
title: "Two Steps to Navigation in React Native"
---
<p>I’m <a href="http://github.com/constellational">building an app</a> called <a href="http://constellational.com/">Constellational</a> to make posting notes online fun.&nbsp;<a href="http://eepurl.com/bHN6Mf">Sign up here</a> if that sounds interesting. Today I added a navigation page to move between <a href="http://arpith.co/post/134069674682/drafts-unpublished-edits-and-posts">your drafts, the posts that you’re currently editing, and all your posts</a>. There are basically two steps to navigation in <a href="https://github.com/facebook/react-native">React Native</a>.</p><figure class="tmblr-full" data-orig-height="600" data-orig-width="800"><img src="/images/fa7fdc0c60b16c77a40e7f041721ff1701f2ec0c9869d7235ac25b3474b7c78a.jpg" data-orig-height="600" data-orig-width="800"></figure><h2>Switch between components based on route</h2><p>In my <a href="https://github.com/constellational/iOS/blob/76008a0d60a5abfdf540f66954fcc9c3e624f512/index.ios.js">index.ios.js</a> I used <a href="https://facebook.github.io/react-native/docs/navigator.html">Navigator</a> to switch between pages:</p><pre>class Constellational extends React.Component {<br> &nbsp;renderScene(route, nav) {<br> &nbsp; &nbsp;switch (route.id) {<br> &nbsp; &nbsp; &nbsp;case 'welcome':<br> &nbsp; &nbsp; &nbsp; &nbsp;return &lt;WelcomePage navigator={nav} /&gt;;<br> &nbsp; &nbsp; &nbsp;case 'navigation':<br> &nbsp; &nbsp; &nbsp; &nbsp;return &lt;NavPage navigator={nav} /&gt;;<br> &nbsp; &nbsp; &nbsp;case 'posts':<br> &nbsp; &nbsp; &nbsp; &nbsp;return &lt;PostsPage navigator={nav} filter={route.filter} /&gt;;<br> &nbsp; &nbsp; &nbsp;default:<br> &nbsp; &nbsp; &nbsp; &nbsp;return &lt;EditPage route={route} navigator={nav} /&gt;;<br> &nbsp; &nbsp;}<br> &nbsp;}<br> &nbsp;render() {<br> &nbsp; &nbsp;SettingStore.loadSettings();<br> &nbsp; &nbsp;return (&lt;Navigator<br> &nbsp; &nbsp; &nbsp;initialRoute={{id: 'welcome'}}<br> &nbsp; &nbsp; &nbsp;renderScene={this.renderScene}<br> &nbsp; &nbsp; &nbsp;configureScene={() =&gt; Navigator.SceneConfigs.FloatFromRight}<br> &nbsp; &nbsp;/&gt;);<br> &nbsp;}<br>} </pre><pre>AppRegistry.registerComponent('Constellational', () =&gt; Constellational);</pre><h2>Push a new Route to the Navigator</h2><p>I then used a <a href="https://facebook.github.io/react-native/docs/listview.html">ListView</a> to <a href="https://github.com/constellational/iOS/blob/76008a0d60a5abfdf540f66954fcc9c3e624f512/components/NavPage.js">list the navigation options</a>, which are basically filters for the posts that are displayed:</p><pre>class PostsPage extends React.Component {<br> &nbsp;constructor(props, context) {<br> &nbsp; &nbsp;super(props, context);<br> &nbsp; &nbsp;var dataSource = new ListView.DataSource({rowHasChanged: (r1, r2) =&gt; r1 !== r2});<br> &nbsp; &nbsp;this.getAll = this.getAll.bind(this);<br> &nbsp; &nbsp;this.renderRow = this.renderRow.bind(this);<br> &nbsp; &nbsp;this.state = {<br> &nbsp; &nbsp; &nbsp;options: dataSource.cloneWithRows(this.getAll())<br> &nbsp; &nbsp;};<br> &nbsp; &nbsp;this.onChange = () =&gt; {<br> &nbsp; &nbsp; &nbsp;this.setState({<br> &nbsp; &nbsp; &nbsp; &nbsp;options: dataSource.cloneWithRows(this.getAll())<br> &nbsp; &nbsp; &nbsp;});<br> &nbsp; &nbsp;};<br> &nbsp;}</pre><pre> &nbsp;componentDidMount() {<br> &nbsp; &nbsp;PostStore.addChangeListener(this.onChange);<br> &nbsp; &nbsp;DraftStore.addChangeListener(this.onChange);<br> &nbsp; &nbsp;EditStore.addChangeListener(this.onChange);<br> &nbsp;}<br> <br> &nbsp;componentWillUnmount() {<br> &nbsp; &nbsp;PostStore.removeChangeListener(this.onChange);<br> &nbsp; &nbsp;DraftStore.removeChangeListener(this.onChange);<br> &nbsp; &nbsp;EditStore.removeChangeListener(this.onChange);<br> &nbsp;}</pre><pre> &nbsp;getAll() {<br> &nbsp; &nbsp;var list = ['All Posts'];<br> &nbsp; &nbsp;if (!EditStore.isEmpty()) list.push('Currently Editing');<br> &nbsp; &nbsp;if (!DraftStore.isEmpty()) list.push('Drafts');<br> &nbsp; &nbsp;list.push('Help');<br> &nbsp; &nbsp;return list;<br> &nbsp;}</pre><pre> &nbsp;render() {<br> &nbsp; &nbsp;return (<br> &nbsp; &nbsp; &nbsp;&lt;View style={styles.page}&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;Text&gt;Constellational&lt;/Text&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;ListView<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;automaticallyAdjustContentInsets={false}<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dataSource={this.state.options}<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;renderRow={this.renderRow}<br> &nbsp; &nbsp; &nbsp; &nbsp;/&gt;<br> &nbsp; &nbsp; &nbsp;&lt;/View&gt;<br> &nbsp; &nbsp;);<br> &nbsp;}<br> <br> &nbsp;renderRow(filter) {<br> &nbsp; &nbsp;var onPress = () =&gt; this.props.navigator.push({id: 'posts', filter: filter});<br> &nbsp; &nbsp;return &lt;Text onPress={onPress}&gt;{filter}&lt;/Text&gt;;<br> &nbsp;}<br>}</pre><p>That looks like a lot of code, but it’s basically checking if the <a href="https://facebook.github.io/flux/docs/overview.html">flux</a> <a href="https://facebook.github.io/flux/docs/overview.html#stores">stores</a> have drafts or posts that are currently being edited before adding those options to the list. When an option is chosen, a new route is pushed to the navigator with an id — which was what was used by index.ios.js to decide which page to switch to — and the filter.</p><p>That’s about it! You can view the <a href="https://github.com/constellational/iOS/blob/76008a0d60a5abfdf540f66954fcc9c3e624f512/components/PostsPage.js">code that displays the posts here</a>, and <a href="http://arpith.co/post/134069674682/drafts-unpublished-edits-and-posts">read about it here</a>. This also fixes <a href="https://github.com/constellational/iOS/issues/54">#54</a>.</p>